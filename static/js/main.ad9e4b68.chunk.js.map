{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/App/App.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/StatisticItem.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","index","className","s","button","type","onClick","StatisticItem","label","value","statisticItem","statisticNumber","Statistics","good","neutral","bad","total","positiveFeedback","statisticList","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","app","toLowerCase","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,cAAgB,kCAAkC,gBAAkB,sC,mBCAxID,EAAOC,QAAU,CAAC,WAAa,oCAAoC,WAAa,oCAAoC,OAAS,kC,gBCA7HD,EAAOC,QAAU,CAAC,IAAM,mB,qHCCT,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACGD,GAAS,6BAAKA,IACdC,K,oBCFQ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOD,EAAQE,KAAI,SAACC,EAAQC,GAC1B,OACE,wBAEEC,UAAWC,IAAEC,OACbC,KAAK,SACLC,QAAS,kBAAMR,EAAgBE,IAJjC,SAMGA,GALIC,M,oBCLE,SAASM,EAAT,GAA0C,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAC7C,OACE,qBAAIP,UAAWC,IAAEO,cAAjB,UACGF,EADH,IACU,sBAAMN,UAAWC,IAAEQ,gBAAnB,SAAqCF,OCFpC,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,iBAEA,OACE,qBAAIf,UAAWC,IAAEe,cAAjB,UACE,cAACX,EAAD,CAAeC,MAAO,OAAQC,MAAOI,IACrC,cAACN,EAAD,CAAeC,MAAO,UAAWC,MAAOK,IACxC,cAACP,EAAD,CAAeC,MAAO,MAAOC,MAAOM,IACpC,cAACR,EAAD,CAAeC,MAAO,QAASC,MAAOO,IACtC,cAACT,EAAD,CAAeC,MAAO,oBAAqBC,MAAOQ,OCfzC,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,oBCKE,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAEMC,EAAqB,WAEzB,OADcb,EAAOC,EAAUC,GAyBjC,OACE,sBAAKb,UAAWC,IAAEwB,IAAlB,UACE,cAAClC,EAAD,CAASC,MAAO,wBAAhB,SACE,cAACE,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAlBW,SAAAE,GACjB,OAAQA,EAAO4B,eACb,IAAK,OACH,OAAOL,GAAQ,SAAAV,GAAI,OAAIA,EAAO,KAChC,IAAK,UACH,OAAOW,GAAW,SAAAV,GAAO,OAAIA,EAAU,KACzC,IAAK,MACH,OAAOW,GAAO,SAAAV,GAAG,OAAIA,EAAM,KAC7B,QACE,aAYF,cAACtB,EAAD,CAASC,MAAO,aAAhB,SAC4B,IAAzBgC,IACC,cAACP,EAAD,CAAcC,QAAS,sBAEvB,cAACR,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,iBArCK,IAATJ,EAAmB,EACD,UAAMgB,KAAKC,MAC9BjB,EAAOa,IAAwB,KADZ,YCd1BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,W","file":"static/js/main.ad9e4b68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticList\":\"Statistics_statisticList__37rHQ\",\"statisticItem\":\"Statistics_statisticItem__2adG-\",\"statisticNumber\":\"Statistics_statisticNumber__kPKI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviewList\":\"FeedbackOptions_reviewList__LJWGd\",\"reviewItem\":\"FeedbackOptions_reviewItem__1x8-W\",\"button\":\"FeedbackOptions_button__176w2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1MXSA\"};","import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return options.map((option, index) => {\r\n    return (\r\n      <button\r\n        key={index}\r\n        className={s.button}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(option)}\r\n      >\r\n        {option}\r\n      </button>\r\n    );\r\n  });\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n};\r\n","import s from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function StatisticItem({ label, value }) {\r\n  return (\r\n    <li className={s.statisticItem}>\r\n      {label} <span className={s.statisticNumber}>{value}</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nStatisticItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n};\r\n","import s from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport StatisticItem from './StatisticItem';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positiveFeedback,\r\n}) {\r\n  return (\r\n    <ul className={s.statisticList}>\r\n      <StatisticItem label={'Good'} value={good} />\r\n      <StatisticItem label={'Neutral'} value={neutral} />\r\n      <StatisticItem label={'Bad'} value={bad} />\r\n      <StatisticItem label={'Total'} value={total} />\r\n      <StatisticItem label={'Positive feedback'} value={positiveFeedback} />\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","// import { Component } from 'react';\r\nimport { useState } from 'react';\r\nimport Section from '../Section/Section';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Notification from '../Notification/Notification';\r\nimport s from './App.module.css';\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const countTotalFeedback = () => {\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    if (good === 0) return 0;\r\n    const positiveFeedback = `${Math.round(\r\n      (good / countTotalFeedback()) * 100,\r\n    )}%`;\r\n    return positiveFeedback;\r\n  };\r\n\r\n  const onClickBtn = option => {\r\n    switch (option.toLowerCase()) {\r\n      case 'good':\r\n        return setGood(good => good + 1);\r\n      case 'neutral':\r\n        return setNeutral(neutral => neutral + 1);\r\n      case 'bad':\r\n        return setBad(bad => bad + 1);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={s.app}>\r\n      <Section title={'Please leave feedback'}>\r\n        <FeedbackOptions\r\n          options={['Good', 'Neutral', 'Bad']}\r\n          onLeaveFeedback={onClickBtn}\r\n        />\r\n      </Section>\r\n      <Section title={'Statistics'}>\r\n        {countTotalFeedback() === 0 ? (\r\n          <Notification message={'No feedback given'} />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback()}\r\n            positiveFeedback={countPositiveFeedbackPercentage()}\r\n          />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Классы\r\n\r\n// import { Component } from 'react';\r\n// import Section from '../Section/Section';\r\n// import FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\n// import Statistics from '../Statistics/Statistics';\r\n// import Notification from '../Notification/Notification';\r\n// import s from './App.module.css';\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   };\r\n\r\n//   onClickBtn = option => {\r\n//     return this.setState(prevState => ({\r\n//       [option.toLowerCase()]: prevState[option.toLowerCase()] + 1,\r\n//       // [option]: prevState[option] + 1,\r\n//     }));\r\n//   };\r\n\r\n//   countTotalFeedback() {\r\n//     const { good, neutral, bad } = this.state;\r\n//     const total = good + neutral + bad;\r\n//     return total;\r\n//   }\r\n//   countPositiveFeedbackPercentage() {\r\n//     const { good } = this.state;\r\n//     if (good === 0) return 0;\r\n//     const positiveFeedback = `${Math.round(\r\n//       (good / this.countTotalFeedback()) * 100,\r\n//     )}%`\r\n//     return positiveFeedback;\r\n//   }\r\n\r\n//   render() {\r\n//     const { good, neutral, bad } = this.state;\r\n//     const total = this.countTotalFeedback();\r\n//     const options = ['Good', 'Neutral', 'Bad'];\r\n//     return (\r\n//       <div className={s.app}>\r\n//         <Section title={'Please leave feedback'}>\r\n//           <FeedbackOptions\r\n//             options={options}\r\n//             onLeaveFeedback={this.onClickBtn}\r\n//           />\r\n//         </Section>\r\n//         <Section title={'Statistics'}>\r\n//           {total === 0 ? (\r\n//             <Notification message={'No feedback given'} />\r\n//           ) : (\r\n//             <Statistics\r\n//               good={good}\r\n//               neutral={neutral}\r\n//               bad={bad}\r\n//               total={total}\r\n//               positiveFeedback={this.countPositiveFeedbackPercentage()}\r\n//             />\r\n//           )}\r\n//         </Section>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}